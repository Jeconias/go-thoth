// This file is generated by gorazor 2.0.1
// DON'T modified manually
// Should edit source file and re-generate: templates/regexp.gohtml

package templates

import (
	"io"
	"strings"
)

// Regexp generates templates/regexp.gohtml
func Regexp() string {
	var _b strings.Builder
	RenderRegexp(&_b)
	return _b.String()
}

// RenderRegexp render templates/regexp.gohtml
func RenderRegexp(_buffer io.StringWriter) {
	_buffer.WriteString("\nconst (\n\talphaRegexString                 = \"^[a-zA-Z]+$\"\n\talphaNumericRegexString          = \"^[a-zA-Z0-9]+$\"\n\talphaUnicodeRegexString          = \"^[\\\\p{L}]+$\"\n\talphaUnicodeNumericRegexString   = \"^[\\\\p{L}\\\\p{N}]+$\"\n\tnumericRegexString               = \"^[-+]?[0-9]+(?:\\\\.[0-9]+)?$\"\n\tnumberRegexString                = \"^[0-9]+$\"\n\thexadecimalRegexString           = \"^[0-9a-fA-F]+$\"\n\thexcolorRegexString              = \"^#(?:[0-9a-fA-F]{3}|[0-9a-fA-F]{6})$\"\n\trgbRegexString                   = \"^rgb\\\\(\\\\s*(?:(?:0|[1-9]\\\\d?|1\\\\d\\\\d?|2[0-4]\\\\d|25[0-5])\\\\s*,\\\\s*(?:0|[1-9]\\\\d?|1\\\\d\\\\d?|2[0-4]\\\\d|25[0-5])\\\\s*,\\\\s*(?:0|[1-9]\\\\d?|1\\\\d\\\\d?|2[0-4]\\\\d|25[0-5])|(?:0|[1-9]\\\\d?|1\\\\d\\\\d?|2[0-4]\\\\d|25[0-5])%\\\\s*,\\\\s*(?:0|[1-9]\\\\d?|1\\\\d\\\\d?|2[0-4]\\\\d|25[0-5])%\\\\s*,\\\\s*(?:0|[1-9]\\\\d?|1\\\\d\\\\d?|2[0-4]\\\\d|25[0-5])%)\\\\s*\\\\)$\"\n\trgbaRegexString                  = \"^rgba\\\\(\\\\s*(?:(?:0|[1-9]\\\\d?|1\\\\d\\\\d?|2[0-4]\\\\d|25[0-5])\\\\s*,\\\\s*(?:0|[1-9]\\\\d?|1\\\\d\\\\d?|2[0-4]\\\\d|25[0-5])\\\\s*,\\\\s*(?:0|[1-9]\\\\d?|1\\\\d\\\\d?|2[0-4]\\\\d|25[0-5])|(?:0|[1-9]\\\\d?|1\\\\d\\\\d?|2[0-4]\\\\d|25[0-5])%\\\\s*,\\\\s*(?:0|[1-9]\\\\d?|1\\\\d\\\\d?|2[0-4]\\\\d|25[0-5])%\\\\s*,\\\\s*(?:0|[1-9]\\\\d?|1\\\\d\\\\d?|2[0-4]\\\\d|25[0-5])%)\\\\s*,\\\\s*(?:(?:0.[1-9]*)|[01])\\\\s*\\\\)$\"\n\thslRegexString                   = \"^hsl\\\\(\\\\s*(?:0|[1-9]\\\\d?|[12]\\\\d\\\\d|3[0-5]\\\\d|360)\\\\s*,\\\\s*(?:(?:0|[1-9]\\\\d?|100)%)\\\\s*,\\\\s*(?:(?:0|[1-9]\\\\d?|100)%)\\\\s*\\\\)$\"\n\thslaRegexString                  = \"^hsla\\\\(\\\\s*(?:0|[1-9]\\\\d?|[12]\\\\d\\\\d|3[0-5]\\\\d|360)\\\\s*,\\\\s*(?:(?:0|[1-9]\\\\d?|100)%)\\\\s*,\\\\s*(?:(?:0|[1-9]\\\\d?|100)%)\\\\s*,\\\\s*(?:(?:0.[1-9]*)|[01])\\\\s*\\\\)$\"\n    emailRegexString                 = \"^(?:(?:(?:(?:[a-zA-Z]|\\\\d|[!#\\\\$%&'\\\\*\\\\+\\\\-\\\\/=\\\\?\\\\^_`{\\\\|}~]|[\\\\x{00A0}-\\\\x{D7FF}\\\\x{F900}-\\\\x{FDCF}\\\\x{FDF0}-\\\\x{FFEF}])+(?:\\\\.([a-zA-Z]|\\\\d|[!#\\\\$%&'\\\\*\\\\+\\\\-\\\\/=\\\\?\\\\^_`{\\\\|}~]|[\\\\x{00A0}-\\\\x{D7FF}\\\\x{F900}-\\\\x{FDCF}\\\\x{FDF0}-\\\\x{FFEF}])+)*)|(?:(?:\\\\x22)(?:(?:(?:(?:\\\\x20|\\\\x09)*(?:\\\\x0d\\\\x0a))?(?:\\\\x20|\\\\x09)+)?(?:(?:[\\\\x01-\\\\x08\\\\x0b\\\\x0c\\\\x0e-\\\\x1f\\\\x7f]|\\\\x21|[\\\\x23-\\\\x5b]|[\\\\x5d-\\\\x7e]|[\\\\x{00A0}-\\\\x{D7FF}\\\\x{F900}-\\\\x{FDCF}\\\\x{FDF0}-\\\\x{FFEF}])|(?:(?:[\\\\x01-\\\\x09\\\\x0b\\\\x0c\\\\x0d-\\\\x7f]|[\\\\x{00A0}-\\\\x{D7FF}\\\\x{F900}-\\\\x{FDCF}\\\\x{FDF0}-\\\\x{FFEF}]))))*(?:(?:(?:\\\\x20|\\\\x09)*(?:\\\\x0d\\\\x0a))?(\\\\x20|\\\\x09)+)?(?:\\\\x22))))@(?:(?:(?:[a-zA-Z]|\\\\d|[\\\\x{00A0}-\\\\x{D7FF}\\\\x{F900}-\\\\x{FDCF}\\\\x{FDF0}-\\\\x{FFEF}])|(?:(?:[a-zA-Z]|\\\\d|[\\\\x{00A0}-\\\\x{D7FF}\\\\x{F900}-\\\\x{FDCF}\\\\x{FDF0}-\\\\x{FFEF}])(?:[a-zA-Z]|\\\\d|-|\\\\.|~|[\\\\x{00A0}-\\\\x{D7FF}\\\\x{F900}-\\\\x{FDCF}\\\\x{FDF0}-\\\\x{FFEF}])*(?:[a-zA-Z]|\\\\d|[\\\\x{00A0}-\\\\x{D7FF}\\\\x{F900}-\\\\x{FDCF}\\\\x{FDF0}-\\\\x{FFEF}])))\\\\.)+(?:(?:[a-zA-Z]|[\\\\x{00A0}-\\\\x{D7FF}\\\\x{F900}-\\\\x{FDCF}\\\\x{FDF0}-\\\\x{FFEF}])|(?:(?:[a-zA-Z]|[\\\\x{00A0}-\\\\x{D7FF}\\\\x{F900}-\\\\x{FDCF}\\\\x{FDF0}-\\\\x{FFEF}])(?:[a-zA-Z]|\\\\d|-|\\\\.|~|[\\\\x{00A0}-\\\\x{D7FF}\\\\x{F900}-\\\\x{FDCF}\\\\x{FDF0}-\\\\x{FFEF}])*(?:[a-zA-Z]|[\\\\x{00A0}-\\\\x{D7FF}\\\\x{F900}-\\\\x{FDCF}\\\\x{FDF0}-\\\\x{FFEF}])))\\\\.?$\"\n\tbase64RegexString                = \"^(?:[A-Za-z0-9+\\\\/]{4})*(?:[A-Za-z0-9+\\\\/]{2}==|[A-Za-z0-9+\\\\/]{3}=|[A-Za-z0-9+\\\\/]{4})$\"\n\tbase64URLRegexString             = \"^(?:[A-Za-z0-9-_]{4})*(?:[A-Za-z0-9-_]{2}==|[A-Za-z0-9-_]{3}=|[A-Za-z0-9-_]{4})$\"\n\tiSBN10RegexString                = \"^(?:[0-9]{9}X|[0-9]{10})$\"\n\tiSBN13RegexString                = \"^(?:(?:97(?:8|9))[0-9]{10})$\"\n\tuUID3RegexString                 = \"^[0-9a-f]{8}-[0-9a-f]{4}-3[0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$\"\n\tuUID4RegexString                 = \"^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\"\n\tuUID5RegexString                 = \"^[0-9a-f]{8}-[0-9a-f]{4}-5[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\"\n\tuUIDRegexString                  = \"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$\"\n\tuUID3RFC4122RegexString          = \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-3[0-9a-fA-F]{3}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$\"\n\tuUID4RFC4122RegexString          = \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n\tuUID5RFC4122RegexString          = \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-5[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n\tuUIDRFC4122RegexString           = \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$\"\n\taSCIIRegexString                 = \"^[\\x00-\\x7F]*$\"\n\tprintableASCIIRegexString        = \"^[\\x20-\\x7E]*$\"\n\tmultibyteRegexString             = \"[^\\x00-\\x7F]\"\n\tdataURIRegexString               = \"^data:.+\\\\/(.+);base64$\"\n\tlatitudeRegexString              = \"^[-+]?([1-8]?\\\\d(\\\\.\\\\d+)?|90(\\\\.0+)?)$\"\n\tlongitudeRegexString             = \"^[-+]?(180(\\\\.0+)?|((1[0-7]\\\\d)|([1-9]?\\\\d))(\\\\.\\\\d+)?)$\"\n\tsSNRegexString                   = `^[0-9]{3}[ -]?(0[1-9]|[1-9][0-9])[ -]?([1-9][0-9]{3}|[0-9][1-9][0-9]{2}|[0-9]{2}[1-9][0-9]|[0-9]{3}[1-9])$`\n\thostnameRegexStringRFC952        = `^[a-zA-Z][a-zA-Z0-9\\-\\.]+[a-zA-Z0-9]$`    // https://tools.ietf.org/html/rfc952\n\thostnameRegexStringRFC1123       = `^[a-zA-Z0-9][a-zA-Z0-9\\-\\.]+[a-zA-Z0-9]$` // accepts hostname starting with a digit https://tools.ietf.org/html/rfc1123\n\tbtcAddressRegexString            = `^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$`        // bitcoin address\n\tbtcAddressUpperRegexStringBech32 = `^BC1[02-9AC-HJ-NP-Z]{7,76}$`              // bitcoin bech32 address https://en.bitcoin.it/wiki/Bech32\n\tbtcAddressLowerRegexStringBech32 = `^bc1[02-9ac-hj-np-z]{7,76}$`              // bitcoin bech32 address https://en.bitcoin.it/wiki/Bech32\n\tethAddressRegexString            = `^0x[0-9a-fA-F]{40}$`\n\tethAddressUpperRegexString       = `^0x[0-9A-F]{40}$`\n\tethAddressLowerRegexString       = `^0x[0-9a-f]{40}$`\n\tuRLEncodedRegexString            = `(%[A-Fa-f0-9]{2})`\n\thTMLEncodedRegexString           = `&#[x]?([0-9a-fA-F]{2})|(&gt)|(&lt)|(&quot)|(&amp)+[;]?`\n\thTMLRegexString                  = `<[/]?([a-zA-Z]+).*?>`\n)\n\nvar (\n\talphaRegex                 = regexp.MustCompile(alphaRegexString)\n\talphaNumericRegex          = regexp.MustCompile(alphaNumericRegexString)\n\talphaUnicodeRegex          = regexp.MustCompile(alphaUnicodeRegexString)\n\talphaUnicodeNumericRegex   = regexp.MustCompile(alphaUnicodeNumericRegexString)\n\tnumericRegex               = regexp.MustCompile(numericRegexString)\n\tnumberRegex                = regexp.MustCompile(numberRegexString)\n\thexadecimalRegex           = regexp.MustCompile(hexadecimalRegexString)\n\thexcolorRegex              = regexp.MustCompile(hexcolorRegexString)\n\trgbRegex                   = regexp.MustCompile(rgbRegexString)\n\trgbaRegex                  = regexp.MustCompile(rgbaRegexString)\n\thslRegex                   = regexp.MustCompile(hslRegexString)\n\thslaRegex                  = regexp.MustCompile(hslaRegexString)\n\temailRegex                 = regexp.MustCompile(emailRegexString)\n\tbase64Regex                = regexp.MustCompile(base64RegexString)\n\tbase64URLRegex             = regexp.MustCompile(base64URLRegexString)\n\tiSBN10Regex                = regexp.MustCompile(iSBN10RegexString)\n\tiSBN13Regex                = regexp.MustCompile(iSBN13RegexString)\n\tuUID3Regex                 = regexp.MustCompile(uUID3RegexString)\n\tuUID4Regex                 = regexp.MustCompile(uUID4RegexString)\n\tuUID5Regex                 = regexp.MustCompile(uUID5RegexString)\n\tuUIDRegex                  = regexp.MustCompile(uUIDRegexString)\n\tuUID3RFC4122Regex          = regexp.MustCompile(uUID3RFC4122RegexString)\n\tuUID4RFC4122Regex          = regexp.MustCompile(uUID4RFC4122RegexString)\n\tuUID5RFC4122Regex          = regexp.MustCompile(uUID5RFC4122RegexString)\n\tuUIDRFC4122Regex           = regexp.MustCompile(uUIDRFC4122RegexString)\n\taSCIIRegex                 = regexp.MustCompile(aSCIIRegexString)\n\tprintableASCIIRegex        = regexp.MustCompile(printableASCIIRegexString)\n\tmultibyteRegex             = regexp.MustCompile(multibyteRegexString)\n\tdataURIRegex               = regexp.MustCompile(dataURIRegexString)\n\tlatitudeRegex              = regexp.MustCompile(latitudeRegexString)\n\tlongitudeRegex             = regexp.MustCompile(longitudeRegexString)\n\tsSNRegex                   = regexp.MustCompile(sSNRegexString)\n\thostnameRegexRFC952        = regexp.MustCompile(hostnameRegexStringRFC952)\n\thostnameRegexRFC1123       = regexp.MustCompile(hostnameRegexStringRFC1123)\n\tbtcAddressRegex            = regexp.MustCompile(btcAddressRegexString)\n\tbtcUpperAddressRegexBech32 = regexp.MustCompile(btcAddressUpperRegexStringBech32)\n\tbtcLowerAddressRegexBech32 = regexp.MustCompile(btcAddressLowerRegexStringBech32)\n\tethAddressRegex            = regexp.MustCompile(ethAddressRegexString)\n\tethaddressRegexUpper       = regexp.MustCompile(ethAddressUpperRegexString)\n\tethAddressRegexLower       = regexp.MustCompile(ethAddressLowerRegexString)\n\tuRLEncodedRegex            = regexp.MustCompile(uRLEncodedRegexString)\n\thTMLEncodedRegex           = regexp.MustCompile(hTMLEncodedRegexString)\n\thTMLRegex                  = regexp.MustCompile(hTMLRegexString)\n)")

}
