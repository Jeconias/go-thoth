@{
	import (
		"strings"
		"github.com/lab259/go-my-ast-hurts"
		"github.com/lab259/go-thoth/generator/templates/rules"
	)
	var fileName string
	var pkg *myasthurts.Package
	var structsThoth []*myasthurts.Struct
-}
package @pkg.Name


@if hasTag(structsThoth) {
	for _, s := range structsThoth {
		// Clean conditions
		rules.Condition = make(map[string]string, 10)
		
		@raw("\n// Validate TODO\n")
		strRef := strings.ToLower(s.Name()[0:1])
		@:func(@strRef @raw("*")@s.Name()) Validate() (errs ValidationErrors) {
			for _, field := range s.Fields {


				for _, tag := range field.Tag.Params {
					attribute := strRef+"."+field.Name
					filterValidate(_buffer, &FilterInput{
						Struct: s,
						StructRef: strRef,
						Field: field,
						Tag: tag,
						AttributeRef: attribute,
					})
					@raw("\n")
					@:} // For tags
			@:} // For fields
			@:return errs
		@:}
	}

}

