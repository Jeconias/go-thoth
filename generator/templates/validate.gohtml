@{
	import (
		"github.com/lab259/go-my-ast-hurts"
	)
	var pkg *myasthurts.Package
-}@:package @pkg.Name

import (
	"fmt"
	"net"
	"net/url"
	"os"
	"strings"
	"github.com/leodido/go-urn"
)

const fieldErrMsg = "Error: Validation of field '%s' failed on tag '%s'"

// FieldError contains all functions to get error details
type FieldError interface {
	Tag() string
	Field() string
}

// ValidationErrors is an array of FieldError's for use in custom error
// messages post validation.
type ValidationErrors []FieldError

type fieldError struct {
	tag   string
	field string
}

// Tag returns the validation tag that failed.
func (f *fieldError) Tag() string {
	return f.tag
}

// Field returns the fields name with the tag name taking precedence over the
// fields actual name.
func (f *fieldError) Field() string {
	return f.field
}

// Error returns the fieldError's error message
func (f *fieldError) Error() string {
	return fmt.Sprintf(fieldErrMsg, f.Field(), f.Tag())
}

var (
	// NewError TODO
	NewError = func(field, tag string) *fieldError {
		return &fieldError{
			tag:   tag,
			field: field,
		}
	}
)

@{RenderRules(_buffer)}
@{RenderIsURL(_buffer)}
@{RenderIsURI(_buffer)}
@{RenderIsUrnRFC2141(_buffer)}
@{RenderIsFile(_buffer)}
@{RenderIsISBN10(_buffer)}
@{RenderIsISBN13(_buffer)}
@{RenderIsDataURI(_buffer)}
@{RenderIsSSN(_buffer)}
@{RenderIsIP(_buffer)}
@{RenderIsCIDR(_buffer)}