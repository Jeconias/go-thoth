// This file is generated by gorazor 2.0.1
// DON'T modified manually
// Should edit source file and re-generate: templates/rules.gohtml

package templates

import (
	"io"
	"strings"
)

// Rules generates templates/rules.gohtml
func Rules() string {
	var _b strings.Builder
	RenderRules(&_b)
	return _b.String()
}

// RenderRules render templates/rules.gohtml
func RenderRules(_buffer io.StringWriter) {
	_buffer.WriteString("\n/*\n\tValidators\n*/\n\n// Empty TODO\nfunc Empty(v int) bool {\n\treturn v == 0\n}\n\n// IsValid TODO\nfunc IsValid(v interface{}) bool {\n\treturn v == nil\n}\n\n/*\n\tNumbers\n*/\n\n// IsUint TODO\nfunc IsUint(v uint) bool {\n\treturn v == 0\n}\n\n// IsUint8 TODO\nfunc IsUint8(v uint8) bool {\n\treturn v == 0\n}\n\n// IsUint16 TODO\nfunc IsUint16(v uint16) bool {\n\treturn v == 0\n}\n\n// IsUint32 TODO\nfunc IsUint32(v uint32) bool {\n\treturn v == 0\n}\n\n// IsUint64 TODO\nfunc IsUint64(v uint64) bool {\n\treturn v == 0\n}\n\n// IsUintptr TODO\nfunc IsUintptr(v uintptr) bool {\n\treturn v == 0\n}\n\n// IsInt TODO\nfunc IsInt(v int) bool {\n\treturn v == 0\n}\n\n// IsInt8 TODO\nfunc IsInt8(v int8) bool {\n\treturn v == 0\n}\n\n// IsInt16 TODO\nfunc IsInt16(v int16) bool {\n\treturn v == 0\n}\n\n// IsInt32 TODO\nfunc IsInt32(v int32) bool {\n\treturn v == 0\n}\n\n// IsInt64 TODO\nfunc IsInt64(v int64) bool {\n\treturn v == 0\n}\n\n// IsFloat32 TODO\nfunc IsFloat32(v float32) bool {\n\treturn v == 0\n}\n\n// IsFloat64 TODO\nfunc IsFloat64(v float64) bool {\n\treturn v == 0\n}\n\n// IsComplex64 TODO\nfunc IsComplex64(v complex64) bool {\n\treturn v == 0\n}\n\n// IsComplex128 TODO\nfunc IsComplex128(v complex128) bool {\n\treturn v == 0\n}")

}
