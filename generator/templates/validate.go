// This file is generated by gorazor 2.0.1
// DON'T modified manually
// Should edit source file and re-generate: templates/validate.gohtml

package templates

import (
	"github.com/lab259/go-my-ast-hurts"
	"github.com/sipin/gorazor/gorazor"
	"io"
	"strings"
)

// Validate generates templates/validate.gohtml
func Validate(pkg *myasthurts.Package) string {
	var _b strings.Builder
	RenderValidate(&_b, pkg)
	return _b.String()
}

// RenderValidate render templates/validate.gohtml
func RenderValidate(_buffer io.StringWriter, pkg *myasthurts.Package) {
	_buffer.WriteString("package ")
	_buffer.WriteString(gorazor.HTMLEscape(pkg.Name))
	_buffer.WriteString("\n\nimport \"fmt\"\n\nconst fieldErrMsg = \"Error:Field validation for '%s' failed on the '%s' tag\"\n\n// FieldError contains all functions to get error details\ntype FieldError interface {\n\tTag() string\n\tField() string\n\tValue() interface{}\n\tType() string\n}\n\n// ValidationErrors is an array of FieldError's for use in custom error\n// messages post validation.\ntype ValidationErrors []FieldError\n\ntype fieldError struct {\n\ttag   string\n\tfield string\n\ttyp   string\n\tvalue interface{}\n}\n\n// NewFieldError TODO\nfunc NewFieldError(field, typ, tag string) *fieldError {\n\treturn &fieldError{\n\t\ttag:   tag,\n\t\tfield: field,\n\t\ttyp:   typ,\n\t}\n}\n\n// Tag returns the validation tag that failed.\nfunc (f *fieldError) Tag() string {\n\treturn f.tag\n}\n\n// Field returns the fields name with the tag name taking precedence over the\n// fields actual name.\nfunc (f *fieldError) Field() string {\n\treturn f.field\n}\n\n// Value returns the actual fields value in case needed for creating the error\n// message\nfunc (f *fieldError) Value() interface{} {\n\treturn f.value\n}\n\n// Type returns the Field's string Type\nfunc (f *fieldError) Type() string {\n\treturn f.typ\n}\n\n// Error returns the fieldError's error message\nfunc (f *fieldError) Error() string {\n\treturn fmt.Sprintf(fieldErrMsg, f.Field(), f.Tag())\n}\n\nvar (\n\t// ErrEmpty TODO\n\tErrEmpty = func(field, tag string) *fieldError {\n\t\treturn &fieldError{\n\t\t\ttag:   tag,\n\t\t\tfield: field,\n\t\t}\n\t}\n\n\t// ErrNumberRequired TODO\n\tErrNumberRequired = func(field, tag string) *fieldError {\n\t\treturn &fieldError{\n\t\t\ttag:   tag,\n\t\t\tfield: field,\n\t\t}\n\t}\n\n\t// ErrStringEmpty TODO\n\tErrStringEmpty = func(field, tag string) *fieldError {\n\t\treturn NewFieldError(field, \"string\", tag)\n\t}\n\t// ErrArrayEmpty TODO\n\tErrArrayEmpty = func(field, tag string) *fieldError {\n\t\treturn NewFieldError(field, \"slice\", tag)\n\t}\n)")
	RenderRules(_buffer)

}
